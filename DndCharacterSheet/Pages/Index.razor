@page "/"
@using DndCharacterSheet.Data
@inject NavigationManager NavigationManager
@inject AppState AppState
    <EditForm Model="@character" OnValidSubmit="@goToArena">
        <DataAnnotationsValidator />
        <div class="text-center modal-content">
            <div class="modal-body row  form-group">
                <div class="col-sm-1"></div>
                <h3 class="col-sm-4"><b>Dnd Character sheet for:</b></h3>
                <InputText @bind-Value="character.Name" class="form-control-lg col-sm-4" />
                <h3 class="col-sm-2"><b>|Level: @character.level</b></h3>
                <div class="col-sm-1"></div>
            </div>
        </div>
        <hr />
        <div class="row text-center">
            <div class="col-sm-4"><b>Max hit Points:</b> @character.maxHitpoints</div>
            <div class="col-sm-4"><b>Temp hit Points:</b> @character.tempHitPoints</div>
            <div class="col-sm-4"><b>Current hit points:</b> @character.acutalHitPoints</div>
        </div>
        <br />
        <div class="text-center row">
            <div class="col-lg-6">


                <table class="table">
                    <tr>
                        <th></th>
                        <th style="padding-right:15px;">Stat</th>
                        <th style="padding-right:15px;">Bonus</th>
                        <th style="padding-right:5px;">Modifier</th>
                        <th style="padding-right:100px;">Reset Value</th>
                    </tr>
                    <tr>
                        <th>STRENGTH</th>
                        <th>@character.currentStrength</th>
                        <th>@((character.currentStrength - 10) / 2)</th>
                        <th><InputNumber class="form-control" @onclick="changeStr" @bind-Value="@character.strengthMod" /></th>
                        <th><button @onclick="(() => character.strengthMod = 0)" class="btn  btn-outline-info">Reset Stats</button></th>
                    </tr>
                    <tr>
                        <th>DEXTERITY</th>
                        <th>@character.currentDexterity</th>
                        <th>@((character.currentDexterity - 10) / 2)</th>
                        <th><InputNumber class="form-control" @onclick="changeDex" @bind-Value="@character.dexterityMod" /></th>
                        <th><button @onclick="(()=>character.dexterityMod = 0)" class="btn  btn-outline-info">Reset Stats</button></th>
                    </tr>
                    <tr>
                        <th>CONSTITUTION</th>
                        <th>@character.currentConstitution</th>
                        <th>@((character.currentConstitution - 10) / 2)</th>
                        <th><InputNumber class="form-control" @onclick="changeCon" @bind-Value="@character.constitutionMod" /></th>
                        <th><button @onclick="(()=>character.constitutionMod = 0)" class="btn  btn-outline-info">Reset Stats</button></th>
                    </tr>
                    <tr>
                        <th>INTELLIGENCE</th>
                        <th>@character.currentIntelligence</th>
                        <th>@((character.currentIntelligence - 10) / 2)</th>
                        <th><InputNumber class="form-control" @onclick="changeInt" @bind-Value="@character.intelligenceMod" /></th>
                        <th><button @onclick="(()=>character.intelligenceMod = 0)" class="btn  btn-outline-info">Reset Stats</button></th>
                    </tr>
                    <tr>
                        <th>WISDOM</th>
                        <th>@character.currentWisdom</th>
                        <th>@((character.currentWisdom - 10) / 2)</th>
                        <th><InputNumber class="form-control" @onclick="changeWis" @bind-Value="@character.wisdomMod" /></th>
                        <th><button @onclick="(()=>character.wisdomMod = 0)" class="btn  btn-outline-info">Reset Stats</button></th>
                    </tr>
                    <tr>
                        <th>CHARISMA</th>
                        <th>@character.currentCharisma</th>
                        <th>@((character.currentCharisma - 10) / 2)</th>
                        <th><InputNumber class="form-control" @onclick="changeCha" @bind-Value="@character.charismaMod" /></th>
                        <th><button @onclick="(()=>character.charismaMod = 0)" class="btn  btn-outline-info">Reset Stats</button></th>
                    </tr>
                </table>

                <button class="btn btn-info text-center" @onclick="generateNew">Generate New Character</button>
            </div>

            <div class="col-lg-6">
                <table class="table">
                    <tr>
                        <th class="col-sm-2">Item Name</th>
                        <th class="col-sm-2">Modifies</th>
                        <th class="col-sm-2">Modifier</th>
                        <th class="col-sm-6">Description</th>
                    </tr>
                    @foreach (var item in character.inventory)
                    {
                        <tr>
                            <td>@item.name</td>
                            <td>@item.modifies</td>
                            <td>@item.modifier</td>
                            <td>@item.description</td>
                        </tr>
                    }
                </table>
                <InventoryManagement @bind-inventory="@character.inventory"></InventoryManagement>
            </div>

        </div>
        <ValidationMessage For="(()=>character.Name)"/>
        <button class="btn btn-outline-warning" type="submit">Go to arena</button>
    </EditForm>
<hr />
<br />
<br />
<br />
@code {
    [Parameter] public string characterName { get; set; }

    public CharacterSheetModel character { get; set; }
    private bool isLoaded { get; set; } = false;
    private bool isValid { get; set; } = false;
    private bool hideModal { get; set; } = false;

    private void goToArena()
    {
        AppState.SetCharacter(character);
        NavigationManager.NavigateTo("/Arena");
        this.StateHasChanged();
    }

    protected override void OnInitialized()
    {
        Random random = new Random();
        character = new CharacterSheetModel(random.Next(1, 20), 8);
    }
    private void generateNew()
    {
        Random random = new Random();
        character = new CharacterSheetModel(random.Next(1, 20), 8);
    }
    public void changeStr()
    {
        character.currentStrength = character.baseStrength + character.strengthMod;
    }
    public void changeDex()
    {
        character.currentDexterity = character.baseDexterity + character.dexterityMod;
    }
    public void changeCon()
    {
        character.currentConstitution = character.baseConstitution + character.constitutionMod;
    }
    public void changeInt()
    {
        character.currentIntelligence = character.baseIntelligence + character.intelligenceMod;
    }
    public void changeWis()
    {
        character.currentWisdom = character.baseWisdom + character.wisdomMod;
    }
    public void changeCha()
    {
        character.currentCharisma = character.baseCharisma + character.charismaMod;
    }
}
