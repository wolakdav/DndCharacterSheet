
@if (showModal)
{
    <div class="modal" style="display:block;">
        <div class="modal-dialog  modal-lg">
            <EditForm Model="@inventory" OnValidSubmit="closeModal">
                <DataAnnotationsValidator />
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="row">
                            <h4 class="mr-auto ml-2">Inventory</h4>
                        </div>
                        <button class="btn btn-outline-secondary mr-2" type="submit" @onclick="closeModal">X</button>
                    </div>
                    <div class="modal-body">
                        @if (inventory.Count > 0)
                        {
                            @foreach (var item in inventory)
                            {
                        <div class="pl-2">

                            <div class="row form-group">
                                <div class="col-sm-2">Item Name:</div>
                                <InputText @bind-Value="item.name" class="col-sm-4 form-control">Item Name</InputText>
                                <div class="col-sm-2"> Is weapon:</div>
                                <InputCheckbox @bind-Value="item.isWeapon" class="col-sm-1 form-check-label"></InputCheckbox>

                            </div>
                            <div class="row form-group">
                                <div class="col-sm-2">Attack Die:</div>
                                <select @bind="item.attackDie" class="form-control col-sm-1">
                                    <option value=4>d4</option>
                                    <option value=6>d6</option>
                                    <option value=10>d10</option>
                                    <option value=12>d12</option>
                                    <option value=20>d20</option>
                                </select>
                                <div class="col-sm-1">x</div>
                                <div class="col-sm-2"><InputNumber class="form-control" @bind-Value="item.amtAttackDie"></InputNumber></div>
                                <div class="col-sm-3">Attack Bonus:</div>
                                <div class="col-sm-2"><InputNumber class="form-control" @bind-Value="item.attackBonus"></InputNumber></div>

                            </div>
                            <div class="row form-group">
                                <div class="col-sm-2">Damage Die:</div>
                                <select @bind="item.damageDie" class="form-control col-sm-1">
                                    <option value=4>d4</option>
                                    <option value=6>d6</option>
                                    <option value=10>d10</option>
                                    <option value=12>d12</option>
                                    <option value=20>d20</option>
                                </select>
                                <div class="col-sm-1">x</div>
                                <div class="col-sm-2"><InputNumber class="form-control" @bind-Value="item.amtDamageDie"></InputNumber></div>
                                <div class="col-sm-3">Damage Bonus:</div>
                                <div class="col-sm-2"><InputNumber class="form-control" @bind-Value="item.damageBonus"></InputNumber></div>
                            </div>
                            <div class="row">
                                <div class="col-sm-3">Description:</div>
                                <InputTextArea @bind-Value="item.description" class="col-sm-8 form-control"></InputTextArea>
                            </div>
                            <div>
                                <ValidationMessage For="@(() => item.name)" />
                                <ValidationMessage For="@(() => item.attackBonus)" />
                                <ValidationMessage For="@(() => item.attackDie)" />
                                <ValidationMessage For="@(() => item.amtAttackDie)" />
                                <ValidationMessage For="@(() => item.description)" />
                                <ValidationMessage For="@(() => item.damageDie)" />
                                <ValidationMessage For="@(() => item.damageBonus)" />
                                <ValidationMessage For="@(() => item.amtDamageDie)" />
                            </div>
                            <div class="row form-group mt-2 ">
                                <button type="button" class="btn btn-danger mr-2" @onclick="(() => deleteItem(item))">Delete Item</button>
                            </div>
                            <hr />
                        </div>
                            }

                        }
                        else
                        {
                            <div class="pl-2">
                                No Items 
                            </div>
                        }
                        <br />
                    </div>
                    <div class="modal-footer row">
                        <button class="btn btn-info mr-auto ml-2" @onclick="addItemToInventory" type="button">Add Item</button>
                        <button class="btn btn-info mr-2" type="submit">Save Inventory</button>
                    </div>

                </div>
            </EditForm>
        </div>
    </div>
}
<button @onclick="(()=>showModal = true)" class="btn btn-info" type="button">Edit Inventory</button>

@code {
    [Parameter] public List<Item> inventory { get; set; }
    [Parameter] public EventCallback<List<Item>> inventoryChanged { get; set; }

    private bool showModal { get; set; } = false;

    private void deleteItem(Item itemToDelete)
    {
        inventory.Remove(itemToDelete);
    }

    private void addItemToInventory()
    {
        var itemToAdd = new Item();
        itemToAdd.Id = new Guid();
        inventory.Add(itemToAdd);
    }

    private async Task closeModal()
    {
        inventory.RemoveAll(x => x.name == null || x.name == "" || x.name == "default");
        showModal = false;
        await inventoryChanged.InvokeAsync(inventory);
    }
}
